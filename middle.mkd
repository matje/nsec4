# Requirements
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
"OPTIONAL" in this document are to be interpreted as described in
[](#RFC2119).


# Rational

bla bla bla

Only 1 record needs to be send, it has also only one signatures. Reduces
bandwidth. Only one type of authenticated denial of existence: nsec4, not two.

An NSEC4 records needs store the following items:

* Closest encloser name;
* Was there a wildcard at the closest encloser;
* The existing types at the closest encloser;
* The next ownername.

Unlike NSEC3, NSEC4 defines a zero hash, which leaves the domain names in tact.

# NSEC4 RDATA Wire Format

Differences with NSEC3:

* Hash length does not need to be stored, all domain names are stored as domain names,
   not raw hashes;

Questions:

* Does a resolver need to know the types present at the closest
  encloser? MG: don't think so
* If you know there was a wildcard, you are done, check 
    algorithm in [](#RFC1034) Section 4.3.2.
* Empty [](#RFC4592)

The RDATA of the NSEC4 RR is as shown below: (also see [](#RFC5155))

                          1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |   Hash Alg.   |     Flags     |          Iterations           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |  Salt Length  |                     Salt                      /
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     /              Next (Hashed) Owner Name                         /
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |             Type Bit Maps at Owner Name                       /
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Hash Algorithm is a single octet.

Flags field is a single octet. The following one-bit flags are defined:

     0 1 2 3 4 5 6 7
    +-+-+-+-+-+-+-+-+
    |           |W|O|
    +-+-+-+-+-+-+-+-+

* O - Opt-Out flag
* W - Wildcard flag

Iterations is represented as a 16-bit unsigned integer, with the most
significant bit first.

Salt Length is represented as an unsigned octet.  Salt Length
represents the length of the Salt field in octets.  If the value is
zero, the following Salt field is omitted.

Salt, if present, is encoded as a sequence of binary octets.  The
length of this field is determined by the preceding Salt Length
field.

The next (hashed) owner name is a base32 encoded domain name (if Iteration
is is not zero). If Iteration is zero it is a plain domain name.

The type bit map at owner name field encodes the existing types at the
owner name of the NSEC4 record.

# Presentation Format

NSEC3 record:

    15BG9L6359F5CH23E34DDUA6N1RIHL9H.example.org. NSEC3 1 0 2 DEAD 
     22670TRPLHSR72PQQMEDLTG1KDQEOLB7 NS SOA RRSIG DNSKEY NSEC3PARAM

NSEC4 record with zero hashing:

    example.org. NSEC4 0 0 0 L1FE a.example.org. 
     NS SOA RRSIG DNSKEY NSEC4PARAM

NSEC4 record with hashing:

    15BG9L6359F5CH23E34DDUA6N1RIHL9H.example.org. NSEC4 1 0 2 L1FE 
     22670TRPLHSR72PQQMEDLTG1KDQEOLB7 NS SOA RRSIG DNSKEY NSEC4PARAM
