# Introduction

## Rationale
Hashed authenticated denial of existence proofs frequently hinge on the 
closest encloser proof (Section 7.2.1 and 8.3 of [](#RFC5155)). When validating
a hashed denial of existence response, a validator must deny or assert the
presence of a next closer name and a wildcard name. A validator can derive
these names from the closest encloser.

This is why most of the denial of existence responses with
NSEC3 [](#RFC5155) contain three records:

* A record where the original owner name of the NSEC3 is the closest encloser;
* A record which covers or matches the next closer, to deny or assert the
  existence of the next closer name;
* A record which covers or matches the wildcard, to deny or assert the
  wildcard synthesis.

[MG: Note that the last entire record carries only one bit of information
     (is there a wildcard presence?).]
[MM: NSEC verhaal weggehaald, dat is niet belangrijk hier.]
[MM: Observations weggehaald, duplicate of Zone Serving section.]

This document presents a new record NSEC4 that is similar to NSEC3,
but differs in the following ways:

1. It provides a new way to deny or assert the existence of the wildcard,
   by introducing the Wildcard bit (described in [](#wildcard-flag));
2. It allows for unhashed records, by introducing zero hashing
   (described in [](#hash-algorithm)).

With NSEC4 you will need a maximum of two records for any denial
of existence response, saving one record and accompanying signature(s) compared
to NSEC3.

By defining zero hashing, we also fold back NSEC into NSEC4 and
add Opt-out to unhashed names. With this change we collapse NSEC
and NSEC3 into one new record to leave only one form of authenticated
denial of existence in the DNS.

## Requirements

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and
"OPTIONAL" in this document are to be interpreted as described in [](#RFC2119).

## Terminology

The reader is assumed to be familiar with the basic DNS and DNSSEC
concepts described in [](#RFC1034), [](#RFC1035), [](#RFC4033), [](#RFC4034),
[](#RFC4035), and subsequent RFCs that update them: [](#RFC2136),
[](#RFC2181), [](#RFC2308) and [](#RFC5155).

Furthermore, the same terminology is used throughout this document as is
described in Section 1.3 from [](#RFC5155), with the following changes:

Opt-Out NSEC4 RR:

:   a NSEC4 RR that has the Opt-Out flag set to 1.

Wildcard NSEC4 RR:

:   a NSEC4 RR that has the Wildcard flag set to 1.

Opt-Out zone:

:   a zone with at least one Opt-Out NSEC4 RR.

Base32:

:   the "Base 32 Encoding with Extended Hex Alphabet" as specified
    in [[RFC4648]](#RFC4648). Note that trailing padding characters ("=") are
    not used in the NSEC4 specification.

To cover:

:   When a hash algorithm is defined,
    a NSEC4 RR is said to "cover" a name if the hash of the name or
    "next closer" name falls between the owner name and the next hashed
    owner name of the NSEC4. When no hash algorithm (zero hashing) is defined, 
    a NSEC4 RR is
    said to "cover" a name if the name or "next closer" name falls between
    the owner name and the next owner name of the NSEC4. In other words, if
    it proves the nonexistence of the name, either directly or by proving the
    nonexistence of an ancestor of the name.

To match:

:   When a hash algorithm is defined, a NSEC4 RR is said to "match" a name
    if the owner name of the NSEC4 RR is the same as the hashed owner name
    of that name. When no hash algorithm (zero hashing) is defined, a NSEC4 RR is said to
    "match" a name if the name and the owner name of the NSEC4 RR are equal.

Zero hashing:

:   Perform no hashing. Leave the name as-is.

# Backwards Compatibility

This specification describes a protocol change that is not generally
backwards compatible with the existing DNSSEC family RFCs. 
In particular, security-aware resolvers that are unaware of this
specification (NSEC4-unaware resolvers) may fail to validate the
responses introduced by this document.

[MM: We need to define an approach for backwards compatibility.]
