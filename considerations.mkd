# Authoritative Server Considerations

## Zone Signing

MM: Todo

## Zone Serving

This specification modifies DNSSEC-enabled DNS responses generated by
authoritative servers. In particular, it replaces the use of NSEC or
NSEC3 RRs in such responses with NSEC4 RRs.

### Denial of Source of Synthesis Proof

With NSEC3, many responses require the closest encloser proof. The closest
encloser is used to determine:

* the "next closer" name, used in a Name Error responses to proof that
  QNAME does not exist, and used in Wildcard No Data responses to proof
  that the wildcard name expansion was valid;

* the source of synthesis, used in Name Error responses to proof that
  wildcard name expansion was not possible, and used in Wildcard No Data
  responses to proof that the wildcard does not have the required RRset.

* the RRsets at the closest encloser, used to determine if the denial
  of existence is from the proper zone and does not cross authoritative
  boundaries.

In many cases, it is actually not a necessity to transmit the closest
encloser, it is just for convenience. The closest encloser is only
required for the authenticated denial of existence of the source of
synthesis. This has now been covered with that addition of the Wildcard
bit in the Flags field.

The Denial of Source of Synthesis proof consists of one NSEC4 RR, that:

* matches the closest (provable) encloser;
* has the Wildcard bit not set.

This is a proof that some ancestor of the QNAME is the closest encloser of
QNAME. To proof that no wildcard expansion was possible, we check that the
Wildcard bit was not set.

### Name Error Responses

If the zone does not contain any RRsets matching QNAME either exactly or
via wildcard name expansion, then the name server must include proof that:

* there is no exact match for QNAME;
* the zone contains no RRsets that would match QNAME via wildcard name expansion.

With NSEC, the server includes in the response a NSEC RR that covers QNAME,
and a NSEC RR that covers the wildcard RR at the closest encloser.

With NSEC3, the server includes in the response a NSEC3 RR that covers the
next closer, a NSEC3 RR that covers the wildcard RR at the closest
encloser, and a NSEC3 RR that matches the closest encloser.

MM: Instead or returning the NSEC3 RR that covers the next closer,
    the server could have returned the NSEC3 RR that covers the QNAME in
    order to proof that there is no exact match for QNAME.

To prove the nonexistence of QNAME with NSEC4, the server MUST include in
the response a NSEC4 RR that covers the next closer, and a NSEC4 RR that
matches the closest encloser. The NSEC4 RR that matches the closest
encloser MUST NOT have the Wildcard bit set in the Flags field.

### No Data Responses

When a NODATA response needs to be returned, it is safe to say that QNAME
exists. Just like with NSEC and NSEC3, if the QTYPE does not equal DS,
the server MUST include the NSEC4 RR that matches QNAME. This NSEC4 RR
MUST NOT have the bits corresponding to either the QTYPE or CNAME set in
its Type Bit Maps field.

Because of Opt-Out, the response can be different when QTYPE is DS. If no
NSEC4 RR matches QNAME, the server MUST return a closest provable encloser
proof for QNAME. In other words, the server MUST include in the response
a NSEC4 RR that covers the next closer, and a NSEC4 RR that matches the
closest provable encloser. Note that we do not need to proof the
nonexistence of the source of synthesis, because a DS RRset next to a
wildcard is meaningless (Section 4.6, [](#RFC4592)).

### Wildcard Answer Responses

If the zone does not contain any RRsets matching QNAME, but there is
wildcard name expansion possible then the name server must include proof
that the wildcard match was valid. This proof is accomplished by proving
that QNAME does not exist and that the closest encloser of QNAME and the
immediate ancestor of the wildcard are equal.

Both with NSEC and NSEC3, the server includes in the response a NSEC RR
that covers the next closer. It is not necessary to return a RR that
matches the closest encloser, as the existence of this closest encloser
is proven by the presence of the expanded wildcard in the response.

To prove that the wildcard name expansion was valid with NSEC4, the server
MUST include in the response a NSEC4 RR that covers the next closer.

### Wildcard No Data Responses

With NSEC, the server includes in the response a NSEC RR that matches the
wildcard, in addition to the the NSEC RR that covers the next closer. The
NSEC RR does not have the bits corresponding to QTYPE or CNAME set in its
Type Bit Maps field.

Again, with NSEC3, the server includes in the response a NSEC3 RR that
matches the wildcard, in addition to the the NSEC3 RR that covers the next
closer. The NSEC3 RR does not have the bits corresponding to QTYPE or
CNAME set in its Type Bit Maps field. Besides that, a NSEC3 RR that
matches the closest encloser is included, because there was no expanded
wildcard in the response that can be used to determine the closest
encloser.

To prove the wildcard no data response with NSEC4, the server MUST include
in the response a NSEC4 RR that matches the wildcard, and a NSEC4 RR that
covers the next closer. We do not need to include a RR that matches the
closest encloser, as it can be derived from the NSEC4 RR that matches the
wildcard. From that, the next closer can be derived.

### Referrals to Unsigned Subzones

Like "serving-no-data-responses" with QYTPE is DS.

### Responding to Queries for NSEC4 Owner Names

Queries for NSEC4 owner names are handled in the same way as normal
queries. When NSEC4 hashing is in effect the paradox (NSEC4 records
deny their own existence) described in Section 7.2.8 of [](#RFC5155)
is back. In light of this paradox validating resolvers SHOULD NOT
use the information from NSEC4 queries.

### Server Response to a Run-Time Collision

The same considerations as described in Section 7.2.9 of [](#RFC5155) apply.

## Secondary Servers

MM: Todo

## Zones Using Unknown Hash Algorithms

MM: Todo

## Dynamic Update

MM: Todo

# Validator Considerations

MM: Todo

# Resolver Considerations

MM: Todo

# Special Considerations

MM: Todo

# IANA Considerations

This memo includes requests to IANA.
Almost the same, except remove the reserved status of the zero hash.

# Security Considerations

This document does not introduce any new security issues beyond those
already discussed in [](#RFC4033), [](#RFC4034), [](#RFC4035) and [](#RFC5155),

# Changelog

## 00

- Initial document
