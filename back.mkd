# Example Zones

## Hashed Denial of Existence

This is the unsigned zone we are using for the NSEC4 examples. 
The overall TTL and class are left out for clarity. 
<!-- 'q' can be found in /home/miekg/src/godns/_examples/q -->
<!-- ./q -dnssec -port 8082 -short AXFR example. | ./nsec4-cleanup | expand | head -n -1 -->

    $ORIGIN example.
    @               SOA     ns1.example. bugs.example. 1 2 3 4 5
                    NS      ns1.example.
    ns1             A       192.0.2.10
    ;; secure delegation
    sd              NS      ns1.sd.example.
                    DS      33694 253 2 ...
    ns1.sd          A       192.0.2.10
    ;; unsecure delegation
    ud              NS      ns1.ud.example.
    ns1.ud          A       192.0.2.10
    *.who           TXT     "Wildcard"


## Zero Hashing

This is the same zone shown with Zero hashing.
The RRSIG Signature field,
the DNSKEY Public Key field and the DS Digest field are omitted. 
The RRSIG expiration and inception times are set to ".".
<!-- ./q -dnssec -port 8080 -short AXFR example. | ./nsec4-cleanup | expand | head -n -1  -->

    $ORIGIN example.
    @               SOA     ns1.example. bugs.example. 1 2 3 4 5
                    RRSIG   SOA 253 1 300 . . 39824 example. ...
                    RRSIG   NS 253 1 300 . . 39824 example. ...
                    RRSIG   DNSKEY 253 1 300 . . 39824 example. ...
                    RRSIG   NSEC4PARAM 253 1 3600 . . 39824 example. ...
                    RRSIG   NSEC4 253 1 5 . . 39824 example. ...
                    NS      ns1.example.
                    DNSKEY  256 3 253 ...
                    NSEC4PARAM 0 0 0 -
                    NSEC4   0 1 0 - ( 
                    ns1.example. NS SOA RRSIG DNSKEY NSEC4 NSEC4PARAM )
    ns1             A       192.0.2.10
                    RRSIG   A 253 2 300 . . 39824 example. ...
                    RRSIG   NSEC4 253 2 5 . . 39824 example. ...
                    NSEC4   0 1 0 - sd.example. A RRSIG NSEC4
    sd              NS      ns1.sd.example.
                    DS      33694 253 2 ...
                    RRSIG   DS 253 2 300 . . 39824 example. ...
                    RRSIG   NSEC4 253 2 5 . . 39824 example. ...
                    NSEC4   0 1 0 - who.example. NS DS RRSIG NSEC4
    ns1.sd          A       192.0.2.10
    ud              NS      ns1.ud.example.
    ns1.ud          A       192.0.2.10
    who             NSEC4   0 3 0 - *.who.example.
                    RRSIG   NSEC4 253 2 5 . . 39824 example. ...
    *.who           TXT     "Wildcard"
                    RRSIG   TXT 253 2 300 . . 39824 example. ...
                    RRSIG   NSEC4 253 2 5 . . 39824 example. ...
                    NSEC4   0 1 0 - example. TXT RRSIG NSEC4

## SHA1 Hashing

This is the same zone shown with SHA1 hashing.
<!-- ./q -dnssec -port 8081 -short AXFR example. | ./nsec4-cleanup | expand | head -n -1 -->
<!-- for z in $(cat ~miekg/src/NSD_NSEC4/example.signed.zero | awk '{print $1}' | grep -v '^;' | sort -u); do
echo "; H($z)\t= $(ldns-nsec3-hash -t 0 -a 1 -s "" $z)"; done -->

    ; H(example)           = 3msev9usmd4br9s97v51r2tdvmr9iqo1
    ; H(ns1.example)       = m1o89lfdo9rrf2f8r8ss42d81d09v48m
    ; H(sd.example)        = 831naajdsm14h0md3kip92563ud3saav
    ; H(*.who.example)     = ht6ocje68mtm96jpes8olrlbf67jjvdu
    ; H(who.example)       = g4s20q3kptookhpt9mgr93k8bfhjs3fd
    ;
    $ORIGIN example.
    @               SOA     ns1.example. bugs.example. 1 2 3 4 5
                    RRSIG   SOA 253 1 300 . . 39824 example. ...
                    RRSIG   NS 253 1 300 . . 39824 example. ...
                    RRSIG   DNSKEY 253 1 300 . . 39824 example. ...
                    RRSIG   NSEC4PARAM 253 1 3600 . . 39824 example. ...
                    NS      ns1.example.
                    DNSKEY  256 3 253 ...
                    NSEC4PARAM 1 0 0 -
    3msev9usmd4br9s97v51r2tdvmr9iqo1 NSEC4 1 1 0 - (
                    831naajdsm14h0md3kip92563ud3saav.example.
                    NS SOA RRSIG DNSKEY NSEC4PARAM )
                    RRSIG   NSEC4 253 2 5 . . 39824 example. ...
    831naajdsm14h0md3kip92563ud3saav NSEC4 1 1 0 - (
                    g4s20q3kptookhpt9mgr93k8bfhjs3fd.example.
                    NS DS RRSIG )
                    RRSIG   NSEC4 253 2 5 . . 39824 example. ...
    g4s20q3kptookhpt9mgr93k8bfhjs3fd NSEC4 1 3 0 - (
                    ht6ocje68mtm96jpes8olrlbf67jjvdu.example. )
                    RRSIG   NSEC4 253 2 5 . . 39824 example. ...
    ht6ocje68mtm96jpes8olrlbf67jjvdu NSEC4 1 1 0 - (
                    m1o89lfdo9rrf2f8r8ss42d81d09v48m.example.
                    TXT RRSIG )
                    RRSIG   NSEC4 253 2 5 . . 39824 example. ...
    m1o89lfdo9rrf2f8r8ss42d81d09v48m NSEC4 1 1 0 - (
                    3msev9usmd4br9s97v51r2tdvmr9iqo1.example.
                    A RRSIG )
                    RRSIG   NSEC4 253 2 5 . . 39824 example. ...
    ns1             A       192.0.2.10
                    RRSIG   A 253 2 300 . . 39824 example. ...
    sd              NS      ns1.sd.example.
                    DS      33694 253 2 ...
                    RRSIG   DS 253 2 300 . . 39824 example. ...
    ns1.sd          A       192.0.2.10

    ud              NS      ns1.ud.example.
    ns1.ud          A       192.0.2.10
    *.who           TXT     "Wildcard"
                    RRSIG   TXT 253 2 300 . . 39824 example. ...

# Example Responses

The examples in this section show response messages using the signed
zone example in [](#sha1-hashing).

## Name Error

An authoritative name error. The NSEC4 RRs prove that the name does
not exist and that there is no wildcard RR that should have been
expanded.
<!-- ./q -dnssec -port 8081 -short a.example. 2>/dev/null |./answer-cleanup | expand -->

    ;; Header: QR AA RD RCODE=NXDOMAIN
    ;;
    ;; Question
    a.example.      IN A

    ;; Answer
    ;; (empty)

    ;; Authority
    ;; NSEC4 RR that matches the closest encloser (example)
    ;; This NSEC4 also covers the next closer name (a.example)
    ;; H(a.example) = 6cd522290vma0nr8lqu1ivtcofj94rga
    3msev9usmd4br9s97v51r2tdvmr9iqo1.example. NSEC4 1 1 0 - (
                    831naajdsm14h0md3kip92563ud3saav.example.
                    NS SOA RRSIG DNSKEY NSEC4PARAM )
    3msev9usmd4br9s97v51r2tdvmr9iqo1.example. RRSIG NSEC4 253 2 5 (
                    . . 39824 example. ... )
    example.        SOA     ns1.example. bugs.example. 1 2 3 4 5
    example.        RRSIG   SOA 253 1 300 . . 39824 example. ...

The query returns one NSEC4 RR that proves that the requested data
does not exist and that no wildcard expansion applies.
The negative response is authenticated by verifying the NSEC4 RR.
The corresponding RRSIGs indicate that the NSEC4 RRs are signed by an
"example" DNSKEY of algorithm 253 and with key tag 39824.
The resolver needs the corresponding DNSKEY RR in order to authenticate this
answer.

In the above example, the name "example" hashes to
"3msev9usmd4br9s97v51r2tdvmr9iqo1". This indicates that this might
be the closest encloser.

To prove that "a.example" does not
exist, the name is hashed to "6cd522290vma0nr8lqu1ivtcofj94rga".
The NSEC4 RR also proves that next closer name does not exist.

To prove that the source of synthesis "*.example" does not exist,
the Wildcard bit at the NSEC4 RR matching the closest encloser is inspected.
The bit is clear and this shows that the source of synthesis does indeed not
exist.

## No Data Error

A No Data Response. The NSEC4 RR proves that the name exists and
that the requested RR type does not.
<!-- ./q -dnssec -port 8081 -short ns1.example. MX 2>/dev/null |./answer-cleanup | expand -->

    ;; Header: QR AA RD RCODE=NOERROR
    ;;
    ;; Question
    ns1.example.    IN MX

    ;; Answer
    ;; (empty)

    ;; Authority
    example.        SOA     ns1.example. bugs.example. 1 2 3 4 5
    example.        RRSIG   SOA 253 1 300 . . 39824 example. ...
    ;; H(ns1.example) = m1o89lfdo9rrf2f8r8ss42d81d09v48m
    m1o89lfdo9rrf2f8r8ss42d81d09v48m.example. NSEC4 1 1 0 - (
                    3msev9usmd4br9s97v51r2tdvmr9iqo1.example.
                    A RRSIG )
    m1o89lfdo9rrf2f8r8ss42d81d09v48m.example. RRSIG NSEC4 253 2 5 (
                    . . 39824 example. ... )

The query returned a NSEC4 RR that proves that the requested name
exists ("ns1.example" hashes to "m1o89lfdo9rrf2f8r8ss42d81d09v48m"),
but the requested RR type does not exist (type MX is absent in the
type code list of the NSEC4 RR), and was not a CNAME (type CNAME is
also absent in the type code list of the NSEC4 RR).

## Referral to an Opt-Out Unsigned Zone

The NSEC4 RRs prove that nothing for this delegation was signed.
There is no proof that the unsigned delegation exists.
<!-- ./q -dnssec -port 8081 -short a.ud.example. MX 2>/dev/null |./answer-cleanup | expand -->
<!-- ldns-signzone does not do the correct thing, this example need to be constructed manual -->

    ;; Header: QR RD RCODE=NOERROR
    ;;
    ;; Question
    a.ud.example.   IN MX

    ;; Answer
    ;; (empty)

    ;; Authority
    ud.example.     NS      ns1.ud.example.

    ;; NSEC4 RR that matches the closest provable encloser (example)
    ;; H(example) = 3msev9usmd4br9s97v51r2tdvmr9iqo1
    3msev9usmd4br9s97v51r2tdvmr9iqo1.example. NSEC4 1 1 0 - (
                    831naajdsm14h0md3kip92563ud3saav.example.
                    NS SOA RRSIG DNSKEY NSEC4PARAM )
    3msev9usmd4br9s97v51r2tdvmr9iqo1.example. RRSIG NSEC4 253 2 5 (
                    . . 39824 example. ... )

    ;; NSEC4 RR that covers the next closer name (ud.example)
    ;; H(ud.example) = ub8e42kj4s2jdfve6aloo98jdoa425a9
    m1o89lfdo9rrf2f8r8ss42d81d09v48m.example. NSEC4 1 1 0 - (
                    3msev9usmd4br9s97v51r2tdvmr9iqo1.example.
                    A RRSIG )
    m1o89lfdo9rrf2f8r8ss42d81d09v48m.example. RRSIG NSEC4 253 2 5 (
                    . . 39824 example. ... )

    ;; Additional
    ns1.ud.example. A       192.0.2.10

The query returned a referral to the unsigned "ud.example." zone. The
response contains the closest provable encloser of "ud.example" to be
"example", since the hash of "ud.example" ("ub8e42kj4s2jdfve6aloo98jdoa425a9")
is covered by the first NSEC4 RR and its Opt-Out bit is set.

## Wildcard Expansion

A query that was answered with a response containing a wildcard expansion.
The label count in the RRSIG RRSet in the answer section
indicates that a wildcard RRSet was expanded to produce this
response, and the NSEC4 RR proves that no next closer name exists
in the zone.
<!-- ./q -dnssec -port 8081 -short a.b.who.example. TXT 2>/dev/null |./answer-cleanup | expand -->

    ;; Header: QR AA RD RCODE=NOERROR
    ;;
    ;; Question
    a.b.who.example.        IN TXT

    ;; Answer
    a.b.who.example.        TXT     "Wildcard"
    a.b.who.example. RRSIG TXT 253 2 300 (
                    . . 39824 example. ... )

    ;; Authority
    ;; NSEC4 RR that covers the next closer name (b.who.example)
    ;; H(b.who.example) = rmv5tauk8nss83vo1st0tp1ps927j71e
    m1o89lfdo9rrf2f8r8ss42d81d09v48m.example. NSEC4 1 1 0 - (
                    3msev9usmd4br9s97v51r2tdvmr9iqo1.example.
                    A RRSIG )
    m1o89lfdo9rrf2f8r8ss42d81d09v48m.example. RRSIG NSEC4 253 2 5 (
                    . . 39824 example. ... )
    example.        NS      ns1.example.
    example.        RRSIG   NS 253 1 300 . . 39824 example. ...

    ;; Additional
    ns1.example.    A       192.0.2.10
    ns1.example.    RRSIG   A 253 2 300 . . 39824 example. ...

The query returned an answer that was produced as a result of a
wildcard expansion. The answer section contains a wildcard RRSet
expanded as it would be in a traditional DNS response. The RRSIG
Labels field value of 2 indicates that the answer is the result of a
wildcard expansion, as the "a.b.who.example" name contains 4 labels.
This also shows that "who.example" exists, so there is no need for an
NSEC4 RR that matches the closest encloser.

The NSEC4 RR proves that no closer match could have been used to
answer this query.

## Wildcard No Data Error

A No Data Response for a name covered by a wildcard.
The NSEC4 RRs prove that the matching wildcard name does not have any
RRs of the requested type and that no closer match exists in the zone.
<!-- ./q -dnssec -port 8081 -short a.b.who.example. AAAA 2>/dev/null |./answer-cleanup | expand -->

    ;; Header: QR AA RD RCODE=NOERROR
    ;;
    ;; Question
    a.b.who.example.        IN AAAA

    ;; Answer
    ;; (empty)

    ;; Authority
    ;; NSEC4 RR that covers the next closer name (b.who.example)
    ;; H(b.who.example) = rmv5tauk8nss83vo1st0tp1ps927j71e
    m1o89lfdo9rrf2f8r8ss42d81d09v48m.example. NSEC4 1 1 0 - (
                    3msev9usmd4br9s97v51r2tdvmr9iqo1.example.
                    A RRSIG )
    m1o89lfdo9rrf2f8r8ss42d81d09v48m.example. RRSIG NSEC4 253 2 5 (
                    . . 39824 example. ... )
    example.        SOA     ns1.example. bugs.example. 1 2 3 4 5
    example.        RRSIG   SOA 253 1 300 . . 39824 example. ...
    ;; NSEC4 RR that matches the wildcard at closest encloser 
    ;; H(*.who.example) = ht6ocje68mtm96jpes8olrlbf67jjvdu
    ht6ocje68mtm96jpes8olrlbf67jjvdu.example. NSEC4 1 1 0 - (
                    m1o89lfdo9rrf2f8r8ss42d81d09v48m.example.
                    TXT RRSIG )
    ht6ocje68mtm96jpes8olrlbf67jjvdu.example. RRSIG NSEC4 253 2 5 (
                    . . 39824 example. ... )

The query returned the NSEC4 RRs that prove that the requested data
does not exist and shows the types that do exist at the wildcard.

# Resolver validation algorithm

[TBD]
